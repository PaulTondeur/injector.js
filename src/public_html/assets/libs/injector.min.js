injector.Injector=function(){this._mappings={},this._createMapping=function(e,t,n){if(this.hasMapping(e,t))throw new Error("Already has mapping for "+e);var r=new injector.InjectionMapping(e,t,n);return this._mappings[n]=r,r},this._getMappingID=function(e,t){return t=t==undefined?"":t,e+"|"+t},this._postConstruct=function(e){var t=e.hasOwnProperty("postConstructs")?e.postConstructs instanceof Array?e.postConstructs:[]:[],n,r,i;for(n in t)r=t[n],i=e.hasOwnProperty(r)?e[r]:null,typeof i=="function"&&i.apply(e)}},injector.Injector.prototype={map:function(e,t){var n=this._getMappingID(e,t);return this._mappings[n]||this._createMapping(e,t,n)},hasMapping:function(e,t){var n=this._getMappingID(e,t);return this._mappings.hasOwnProperty(n)},getInstance:function(e,t){if(this.hasMapping(e,t))return this.getMapping(e,t).getValue();var n=t==undefined?"":" by name "+t;throw new Error('Cannot return instance "'+e+n+'" because no mapping has been found')},getMapping:function(e,t){if(this.hasMapping(e,t)){var n=this._getMappingID(e,t);return this._mappings[n]}var r=t==undefined?"":" by name "+t;throw new Error('Mapping "'+e+r+'" was not found')},injectInto:function(e){var t,n;for(t in e){n=injector.utils.stringToObject(t,e[t]);if(n!=null){if(!this.hasMapping(n.type,n.name))throw new Error("Cannot inject "+n.type+" into "+e+" due to a missing rule");e[t]=this.getInstance(n.type,n.name)}}this._postConstruct(e)}},define("Injector",function(){})